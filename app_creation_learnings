- Adding objects
- adding constraint to objects with reference to view or other objects
- using horizontal and vertical stacks
- customize objects for different screen sizes using 'vary for traits'
- opening view controller using double circle icon
- mapping properties and actions to viewcontroller > by highlightinmg element, then ctrl and drag arrow to viewController
- unmapping properties to view controller
- creating new page is creating new view controller > file > new > file > cocoa touch class > sub class of UI view controller. Now objects > view controller
and then map both ie highlight new view contoller object > inspect > custom class > select corresponding class
- connect pages by directly pointing button > ctrl > drag to new view
- switch from one screen to another via code > create segue > call below code
  performSegue(withIdentifier: "segueEnd", sender: self)
- pass data between different view controller:
  - create a segue by clicking view controller icon on view 1 and ctrl drag to second view
  - name the segue
  - create a empty variable in second view
  - in func override func viewDidLoad(), assign value like mode.text = my_variable
  - in first controller, on even which changes page like button click:
    performSegue(withIdentifier: "segue_1", sender: self)
   - write additional function:
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        let viewControllerGridPage = segue.destination as! ViewControllerGridPage
        viewControllerGridPage.modeFromMainPage = "basic"
    }
    
- delay of 1 sec after any operation(like game end)
  Create a function like this:
  @objc func delayedFunc() {
  //write the code here that you want to execute with a one second delay
  }
  
  Then call this where you want the delayed function to execute:
  let delayInSeconds = 1
  perform(#selector(delayedFunc), with: nil, afterDelay: delayInSeconds)
  
- Adding sound
  1> move your audio files to same folder to viewcontroller files
  2> mytestApp ie 1st folder > go to tab - build Phases > last option is Copy bundle resources > add your mp3 file here also
  3>code: 
  import AVFoundation
  let soundEffect = URL(fileURLWithPath: Bundle.main.path(forResource: "btn_click_sound", ofType: "mp3")!)
   var audioPlayer = AVAudioPlayer()

   @IBAction func buttonClick(sender: AnyObject) {
       do {
            audioPlayer = try AVAudioPlayer(contentsOf: soundEffect)
            audioPlayer.play()
       } catch {
          // couldn't load file :(
       } 
   }
    
